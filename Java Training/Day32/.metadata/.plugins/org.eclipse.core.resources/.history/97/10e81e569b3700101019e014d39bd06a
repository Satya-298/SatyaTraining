package com.java.jsf;

import java.util.Arrays;
import java.util.Properties;

import javax.faces.event.ActionEvent;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import com.java.ejb.CalculatorBeanRemote;

//import com.java.ejb.RemoteCalculator;

public class Calculation {

	private int firstNo;
	private int secondNo;
	private int[] result = new int[3];
	
	public String show() {
		return "Menu.jsp?faces-redirect=true";

	}
	
	
	
	@Override
	public String toString() {
		return "Calculation [firstNo=" + firstNo + ", secondNo=" + secondNo + ", result=" + Arrays.toString(result)
				+ "]";
	}

	public int getFirstNo() {
		return firstNo;
	}
	public void setFirstNo(int firstNo) {
		this.firstNo = firstNo;
	}
	public int getSecondNo() {
		return secondNo;
	}
	public void setSecondNo(int secondNo) {
		this.secondNo = secondNo;
	}
	
	
	
	public String getResult() {
		return Arrays.toString(result);
	}
	public void setResult(int[] result) {
		this.result = result;
	}
	public String redirect() {
		return "Menu.jsp?faces-redirect=true";
	}
	public Calculation() {
		
	}
	
	public void addition(ActionEvent evt) {
		
		CalculatorBeanRemote statelessRemoteCalculator = null;
		try {
			statelessRemoteCalculator = lookupRemoteStatelessCalculator();
	        System.out.println("EJB Business Logic Getting Started");
	        int sum = statelessRemoteCalculator.add(this.firstNo, this.secondNo);
	        int sub = statelessRemoteCalculator.subtract(this.firstNo, this.secondNo);
	        int mult= statelessRemoteCalculator.mult(this.firstNo, this.secondNo);
	        result[0]=sum;
	        result[1]=sub;
	        result[2]=mult;
	        
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	//	this.result = this.firstNo + this.secondNo;
	}


	private static Context createInitialContext() throws NamingException {
        Properties jndiProperties = new Properties();
        jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY, 
          "org.jboss.naming.remote.client.InitialContextFactory");
        jndiProperties.put(Context.URL_PKG_PREFIXES, 
          "org.jboss.ejb.client.naming");
        jndiProperties.put(Context.PROVIDER_URL, 
           "http-remoting://localhost:8080");
        jndiProperties.put("jboss.naming.client.ejb.context", true);
        return new InitialContext(jndiProperties);
    }
	   private static CalculatorBeanRemote lookupRemoteStatelessCalculator() throws NamingException {
		   Context ctx = createInitialContext();
	        // The app name is the application name of the deployed EJBs. This is typically the ear name
	        // without the .ear suffix. However, the application name could be overridden in the application.xml of the
	        // EJB deployment on the server.
	        // Since we haven't deployed the application as a .ear, the app name for us will be an empty string
	    //    final String appName = "";
	        // This is the module name of the deployed EJBs on the server. This is typically the jar name of the
	        // EJB deployment, without the .jar suffix, but can be overridden via the ejb-jar.xml
	        // In this example, we have deployed the EJBs in a jboss-as-ejb-remote-app.jar, so the module name is
	        // jboss-as-ejb-remote-app
	      //  final String moduleName = "EJBModule";
	        // AS7 allows each deployment to have an (optional) distinct name. We haven't specified a distinct name for
	        // our EJB deployment, so this is an empty string
	        final String distinctName = "";
	        // The EJB name which by default is the simple class name of the bean implementation class
	        final String beanName = "CalculatorBean";
	        System.out.println(beanName);
	        // the remote view fully qualified class name
	   //     System.out.println(RemoteCalculator.class.getName());
	        final String viewClassName = CalculatorBeanRemote.class.getName();
	        // let's do the lookup
	   //     String namespace="ejb:/HelloWorldEJB!com.ejb.HelloWorld";
	     //   return (RemoteCalculator) context.lookup("ejb:" + appName + "/" + moduleName + "/" + distinctName + "/" + beanName + "!" + viewClassName);
	        String appName = "";
            String moduleName = "EJBCalculation";
          //  String distinctName = "";
           // String beanName = CalculatorBean.class.getSimpleName();
           // String viewClassName = RemoteCalculator.class.getName();
            return (CalculatorBeanRemote) ctx.lookup("ejb:" 
              + appName + "/" + moduleName 
              + "/" + distinctName + "/" + beanName + "!" + viewClassName);
	    }


}