package com.java.jdbc.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.java.jdbc.model.IncidentType;
import com.java.jdbc.model.Incidents;
import com.java.jdbc.model.Reports;
import com.java.jdbc.model.Status;
import com.java.jdbc.util.ConnectionHelper;

public class CrimeAnalysisServiceImpl implements ICrimeAnalysisService{

	private List<Incidents> incidentList = new ArrayList<Incidents>();
	int count = 1;
	
	Connection conn;
	PreparedStatement pstmt;
	
	
	@Override
	public boolean createIncident(Incidents incident) throws ClassNotFoundException, SQLException {
		
		conn = ConnectionHelper.getConnection();
		String cmd = "Insert INTO Incidents(IncidentType, IncidentDate, Latitude, Longitude, Descriptions, Status, AgencyID, OfficerID) Values(?,?,?,?,?,?,?,?);";
		pstmt = conn.prepareStatement(cmd);
		pstmt.setString(1, incident.getIncidentType().name());
		pstmt.setDate(2, incident.getIncidentDate());
		pstmt.setDouble(3, incident.getLatitude());
		pstmt.setDouble(4, incident.getLongitude());
		pstmt.setString(5, incident.getDescriptions());
		pstmt.setString(6, incident.getStatus().name());
		pstmt.setInt(7, incident.getAgencyId());
		pstmt.setInt(8, incident.getOfficerId());
		int res = pstmt.executeUpdate();
		
				
		return res > 0;
	}

	@Override
	public boolean updateIncidentStatus(Status status, int incidentId) throws ClassNotFoundException, SQLException {
		
		conn = ConnectionHelper.getConnection();
		String cmd = "Update Incidents set Status = ? where IncidentID = ?;";
		pstmt = conn.prepareStatement(cmd);
		pstmt.setString(1, status.name());
		pstmt.setInt(2, incidentId);
		int res = pstmt.executeUpdate();
		
		
		return res > 0;
	}

	@Override
	public List<Incidents> getIncidentsInDateRange(Date startDate, Date endDate) throws ClassNotFoundException, SQLException {
		
		conn = ConnectionHelper.getConnection();
		String cmd = "Select * Incidents where IncidentDate BETWEEN ? AND ?;";
		pstmt = conn.prepareStatement(cmd);
		pstmt.setDate(1, startDate);
		pstmt.setDate(2, endDate);
		
		ResultSet rs = pstmt.executeQuery();
		
		while(rs.next()) {
			Incidents incident = new Incidents();
			incident.setIncidentId(rs.getInt("IncidentId"));
			
		}
		
		
		return null;
	}

	@Override
	public List<Incidents> searchIncidents(IncidentType criteria) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Reports generateIncidentReport(Incidents incident) {
		// TODO Auto-generated method stub
		return null;
	}

}
