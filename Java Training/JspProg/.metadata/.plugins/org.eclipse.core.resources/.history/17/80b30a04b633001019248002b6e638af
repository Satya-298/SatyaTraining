package com.java.jsf.dao;

import java.util.List;

import javax.faces.event.ValueChangeEvent;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Projection;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;

import com.java.jsf.model.Employ;
import com.java.jsf.model.Restaurant;
import com.java.jsf.util.SessionHelper;

public class RestaurantDaoImpl implements RestaurantDao {

	SessionFactory sf;
	Session session;

	@Override
	public List<Restaurant> showRestaurantDao() {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Query query = session.getNamedQuery("showRestaurant");
		List<Restaurant> list = query.list();
			
		return list;
	}
	
	public List<String> getFoodType() {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Criteria cr = session.createCriteria(Restaurant.class);
		Projection projection = Projections.distinct(Projections.property("")); 
		cr.setProjection(projection); 
		List<String> list = cr.list();
		return list;
	}
	
	@Override
	public List<Restaurant> restaurantListByType(String flag) {
		sf = SessionHelper.getConnection();
		session = sf.openSession();
		Criteria cr = session.createCriteria(Restaurant.class);
		cr.add(Restrictions.eq("flag", flag));
		return cr.list();
	}
}
